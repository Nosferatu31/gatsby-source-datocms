name: Node.js CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['14.x', '16.x', '18.x']
        gatsby-version: ['4', '5']
        exclude:
          - node-version: '14.x'
            gatsby-version: '5'
          - node-version: '16.x'
            gatsby-version: '5'

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies (Gatsby ${{ matrix.gatsby-version }})
        run: |
          node -e "
            const fs = require('fs');
            const gatsbyVersion = parseInt(process.env.GATSBY_VERSION);
            const pluginImageVersion = gatsbyVersion - 3;
            const pluginSharpImageVersion = gatsbyVersion;
            const transformerRemarkVersion = gatsbyVersion + 1;
            packageJson = JSON.parse(fs.readFileSync('package.json'));
            packageJson.devDependencies.gatsby = `^${gatsbyVersion}.0.0`;
            packageJson.devDependencies['gatsby-plugin-image'] = `^${pluginImageVersion}.0.0`;
            packageJson.devDependencies['gatsby-plugin-sharp'] = `^${pluginSharpImageVersion}.0.0`;
            packageJson.devDependencies['gatsby-transformer-remark'] = `^${transformerRemarkVersion}.0.0`;
            packageJson.engines.node = '>=' + process.env.NODE_VERSION;
            fs.writeFileSync('package.json', JSON.stringify(packageJson, null, 2));
          "
          cat package.json
          yarn install --no-lockfile
        env:
          GATSBY_VERSION: ${{ matrix.gatsby-version }}
          NODE_VERSION: ${{ matrix.node-version }}
      - name: Run tests
        run: |
          cat node_modules/gatsby/package.json | grep "\"version\""
          yarn test
        env:
          CI: true
